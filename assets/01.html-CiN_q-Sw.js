import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,b as n,d as i,e as l,g as e,l as p,r as k,o as d}from"./app-DN83cdpr.js";const r="/blog_technical/assets/40fbb989a9fd2217320ab287e80e1fb0-C5BmYEfy.png",A="/blog_technical/assets/image-20210309154706676-BUyi8lvE.png",c="/blog_technical/assets/50d57e18813e18270747806d5d73f0a3-CqEw0Nmj.png",g="/blog_technical/assets/image-20210309160439908-CRphUyXb.png",y={};function S(B,s){const a=k("RouteLink");return d(),h("div",null,[s[18]||(s[18]=n("h1",{id:"_01-tls-又是什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_01-tls-又是什么"},[n("span",null,"01 | TLS 又是什么？")])],-1)),n("p",null,[s[1]||(s[1]=i("在 ")),l(a,{to:"/http-protocol/03/07.html"},{default:e(()=>s[0]||(s[0]=[i("HTTP有哪些优点？又有哪些缺点？")])),_:1}),s[2]||(s[2]=i(" 曾经谈到过 HTTP 的一些缺点，其中的「无状态」在加入 Cookie 后得到了解决，而另两个缺点—— ")),s[3]||(s[3]=n("strong",null,"明文",-1)),s[4]||(s[4]=i(" 和 ")),s[5]||(s[5]=n("strong",null,"不安全",-1)),s[6]||(s[6]=i(" 仅凭 HTTP 自身是无力解决的，需要引入新的 HTTPS 协议。"))]),s[19]||(s[19]=p(`<h2 id="为什么要有-https" tabindex="-1"><a class="header-anchor" href="#为什么要有-https"><span>为什么要有 HTTPS？</span></a></h2><p>简单的回答是 <strong>因为 HTTP 不安全</strong> 。</p><p>由于 HTTP <strong>天生明文</strong> 的特点，整个传输过程完全透明，任何人都能够在链路中截获、修改或者伪造请求 / 响应报文，数据不具有可信性。</p><p>比如，前几讲中说过的 <strong>代理服务</strong> 。它作为 HTTP 通信的中间人，在数据上下行的时候可以添加或删除部分头字段，也可以使用黑白名单过滤 body 里的关键字，甚至直接发送虚假的请求、响应，而浏览器和源服务器都没有办法判断报文的真伪。</p><p>这对于网络购物、网上银行、证券交易等需要高度信任的应用场景来说是非常致命的。如果没有基本的安全保护，使用互联网进行各种电子商务、电子政务就根本无从谈起。</p><p>对于安全性要求不那么高的新闻、视频、搜索等网站来说，由于互联网上的恶意用户、恶意代理越来越多，也很容易遭到 <strong>流量劫持</strong> 的攻击，在页面里强行嵌入广告，或者分流用户，导致各种利益损失。</p><p>对于你我这样的普通网民来说，HTTP 不安全的隐患就更大了，上网的记录会被轻易截获，网站是否真实也无法验证，黑客可以伪装成银行网站，盗取真实姓名、密码、银行卡等敏感信息，威胁人身安全和财产安全。</p><p>总的来说，今天的互联网已经不再是早期的田园牧歌时代，而是进入了黑暗森林状态。上网的时候必须步步为营、处处小心，否则就会被不知道埋伏在哪里的黑客所猎杀</p><h2 id="什么是安全" tabindex="-1"><a class="header-anchor" href="#什么是安全"><span>什么是安全？</span></a></h2><p>既然 HTTP 不安全，那什么样的通信过程才是安全的呢？</p><p>通常认为，如果通信过程具备了四个特性，就可以认为是 「安全」的，这四个特性是：<strong>机密性、完整性，身份认证和不可否认</strong> 。</p><ul><li><p><strong>机密性</strong>（Secrecy/Confidentiality）</p><p>是指对数据的「保密」，只能由可信的人访问，对其他人是不可见的秘密，简单来说就是不能让不相关的人看到不该看的东西。</p><p>比如小明和小红私下聊天，但隔墙有耳，被小强在旁边的房间里全偷听到了，这就是没有机密性。我们之前一直用的 Wireshark ，实际上也是利用了 HTTP 的这个特点，捕获了传输过程中的所有数据。</p></li><li><p><strong>完整性</strong>（Integrity，也叫一致性）</p><p>是指数据在传输过程中 <strong>没有被窜改</strong> ，不多也不少，完完整整地保持着原状。</p><p><strong>机密性虽然可以让数据成为秘密</strong> ，但不能防止黑客对数据的修改，黑客可以替换数据，调整数据的顺序，或者增加、删除部分数据，破坏通信过程。</p><p>比如，小明给小红写了张纸条：明天公园见。小强把「公园」划掉，模仿小明的笔迹把这句话改成了「明天广场见」。小红收到后无法验证完整性，信以为真，第二天的约会就告吹了。</p></li><li><p><strong>身份认证</strong>（Authentication）</p><p>是指确认对方的真实身份，也就是「证明你真的是你」，保证消息只能发送给可信的人。</p><p>如果通信时另一方是假冒的网站，那么数据再保密也没有用，黑客完全可以使用冒充的身份套出各种信息，加密和没加密一样。</p><p>比如，小明给小红写了封情书：我喜欢你，但不留心发给了小强。小强将错就错，假冒小红回复了一个「白日做梦」，小明不知道这其实是小强的话，误以为是小红的，后果可想而知。</p></li><li><p><strong>不可否认</strong>（Non-repudiation/Undeniable）</p><p>也叫不可抵赖，意思是不能否认已经发生过的行为，不能「说话不算数、耍赖皮」。</p></li></ul><p>使用前三个特性，可以解决安全通信的大部分问题，但如果缺了不可否认，那通信的事务真实性就得不到保证，有可能出现老赖。</p><p>比如，小明借了小红一千元，没写借条，第二天矢口否认，小红也确实拿不出借钱的证据，只能认倒霉。另一种情况是小明借钱后还了小红，但没写收条，小红于是不承认小明还钱的事，说根本没还，要小明再掏出一千元。</p><p>所以，只有同时具备了机密性、完整性、身份认证、不可否认这四个特性，通信双方的利益才能有保障，才能算得上是真正的安全。</p><h2 id="什么是-https" tabindex="-1"><a class="header-anchor" href="#什么是-https"><span>什么是 HTTPS？</span></a></h2><p>说到这里，终于轮到今天的主角 HTTPS 出场了，它为 HTTP 增加了刚才所说的四大安全特性。</p><p>HTTPS 其实是一个「非常简单」的协议，RFC 文档很小，只有短短的 7 页，里面规定了 <strong>新的协议名「https」，默认端口号 443</strong> ，至于其他的什么请求 - 应答模式、报文结构、请求方法、URI、头字段、连接管理等等都完全沿用 HTTP，没有任何新的东西。</p><p>也就是说，除了协议名 <code>http</code> 和端口号 80 这两点不同，HTTPS 协议在语法、语义上和 HTTP 完全一样，优缺点也照单全收（当然要除去「明文」和「不安全」）。</p><p>不信你可以用 URI <code>https://www.chrono.com</code> 访问之前 08 至 21 讲的所有示例，看看它的响应报文是否与 HTTP 一样。</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https://www.chrono.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https://www.chrono.com/11-1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https://www.chrono.com/15-1?name=a.json</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https://www.chrono.com/16-1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>你肯定已经注意到了，在用 HTTPS 访问实验环境时 Chrome 会有不安全提示，必须点击 <code>高级 - 继续前往</code> 才能顺利显示页面。而且如果用 Wireshark 抓包，也会发现与 HTTP 不一样，不再是简单可见的明文，多了 <code>Client Hello</code>、<code>Server Hello</code> 等新的数据包。</p><figure><img src="'+A+'" alt="image-20210309154706676" tabindex="0" loading="lazy"><figcaption>image-20210309154706676</figcaption></figure><p>通过抓包，确实不太容易分清楚数据内容了</p><p>这就是 HTTPS 与 HTTP 最大的区别，它能够鉴别危险的网站，并且尽最大可能保证你的上网安全，防御黑客对信息的窃听、窜改或者钓鱼、伪造。</p><p>你可能要问了，既然没有新东西，HTTPS 凭什么就能做到机密性、完整性这些安全特性呢？</p>',27)),n("p",null,[s[9]||(s[9]=i("秘密就在于 HTTPS 名字里的 ")),s[10]||(s[10]=n("code",null,"S",-1)),s[11]||(s[11]=i(" ，它把 HTTP 下层的传输协议由 TCP/IP 换成了 SSL/TLS，由 ")),s[12]||(s[12]=n("strong",null,"HTTP over TCP/IP",-1)),s[13]||(s[13]=i(" 变成了 ")),s[14]||(s[14]=n("strong",null,"HTTP over SSL/TLS",-1)),s[15]||(s[15]=i(" ，让 HTTP 运行在了安全的 SSL/TLS 协议上（可参考 ")),l(a,{to:"/http-protocol/02/04.html"},{default:e(()=>s[7]||(s[7]=[i("与 HTTP 相关的各种协议")])),_:1}),s[16]||(s[16]=i(" 、 ")),l(a,{to:"/http-protocol/02/05.html"},{default:e(()=>s[8]||(s[8]=[i("常说的四层和七层到底是什么？五层、六层哪去了？")])),_:1}),s[17]||(s[17]=i("），收发报文不再使用 Socket API，而是调用专门的安全接口。"))]),s[20]||(s[20]=p('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>上面表述有误，不是将 TCP/IP 换成了 SSL/TLS，另外下面的图是正确的，只是上面表述不对</p><p>传输还是使用的 TCP/IP 协议，只是 SSL/TLS 把 HTTP 协议再包装了一下</p></div><figure><img src="'+c+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>所以说，HTTPS 本身并没有什么惊世骇俗的本事，全是靠着后面的 SSL/TLS 撑腰。只要学会了 SSL/TLS，HTTPS 自然就手到擒来。</p><h2 id="ssl-tls" tabindex="-1"><a class="header-anchor" href="#ssl-tls"><span>SSL/TLS</span></a></h2><p>现在我们就来看看 SSL/TLS，它到底是个什么来历。</p><p>SSL 即安全套接层（Secure Sockets Layer），在 OSI 模型中处于第 5 层（会话层），由网景公司于 1994 年发明，有 v2 和 v3 两个版本，而 v1 因为有严重的缺陷从未公开过。</p><p>SSL 发展到 v3 时已经证明了它自身是一个非常好的安全通信协议，于是互联网工程组 IETF 在 1999 年把它改名为 TLS（<strong>传输层安全，Transport Layer Security</strong>），正式标准化，版本号从 1.0 重新算起，所以 TLS1.0 实际上就是 SSLv3.1。</p><p>到今天 TLS 已经发展出了三个版本，分别是 2006 年的 1.1、2008 年的 1.2 和去年（2018）的 1.3，每个新版本都紧跟密码学的发展和互联网的现状，持续强化安全和性能，已经成为了信息安全领域中的权威标准。</p><p>目前应用的最广泛的 TLS 是 1.2，而之前的协议（TLS1.1/1.0、SSLv3/v2）都已经被认为是不安全的，各大浏览器即将在 2020 年左右停止支持，所以接下来的讲解都针对的是 TLS1.2。</p><p>TLS 由记录协议、握手协议、警告协议、变更密码规范协议、扩展协议等几个子协议组成，综合使用了对称加密、非对称加密、身份认证等许多密码学前沿技术。</p><p>浏览器和服务器在使用 TLS 建立连接时需要选择一组恰当的加密算法来实现安全通信，这些算法的组合被称为 <strong>密码套件（cipher suite，也叫加密套件）</strong> 。</p><p>你可以访问实验环境的 URI <code>https://www.chrono.com/23-1</code>，对 TLS 和密码套件有个感性的认识。</p><p>响应内容为</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>hello OpenSSL 1.1.0j  20 Nov 2018</span></span>
<span class="line"><span></span></span>
<span class="line"><span>protocol: TLSv1.2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sni name: www.chrono.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span>client cert: NONE</span></span>
<span class="line"><span></span></span>
<span class="line"><span>client curves: 0xaaaa:X25519:prime256v1:secp384r1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>client suites: 0x3a3a:0x1301:0x1302:0x1303:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA</span></span>
<span class="line"><span></span></span>
<span class="line"><span>server suite: ECDHE-RSA-AES256-GCM-SHA384</span></span>
<span class="line"><span></span></span>
<span class="line"><span>all suites in server:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>suite 0: ECDHE-ECDSA-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 1: ECDHE-RSA-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 2: DHE-RSA-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 3: ECDHE-ECDSA-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 4: ECDHE-RSA-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 5: DHE-RSA-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 6: ECDHE-ECDSA-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 7: ECDHE-RSA-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 8: DHE-RSA-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 9: ECDHE-ECDSA-AES256-SHA384</span></span>
<span class="line"><span>suite 10: ECDHE-RSA-AES256-SHA384</span></span>
<span class="line"><span>suite 11: DHE-RSA-AES256-SHA256</span></span>
<span class="line"><span>suite 12: ECDHE-ECDSA-AES128-SHA256</span></span>
<span class="line"><span>suite 13: ECDHE-RSA-AES128-SHA256</span></span>
<span class="line"><span>suite 14: DHE-RSA-AES128-SHA256</span></span>
<span class="line"><span>suite 15: ECDHE-ECDSA-AES256-SHA</span></span>
<span class="line"><span>suite 16: ECDHE-RSA-AES256-SHA</span></span>
<span class="line"><span>suite 17: DHE-RSA-AES256-SHA</span></span>
<span class="line"><span>suite 18: ECDHE-ECDSA-AES128-SHA</span></span>
<span class="line"><span>suite 19: ECDHE-RSA-AES128-SHA</span></span>
<span class="line"><span>suite 20: DHE-RSA-AES128-SHA</span></span>
<span class="line"><span>suite 21: RSA-PSK-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 22: DHE-PSK-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 23: RSA-PSK-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 24: DHE-PSK-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 25: ECDHE-PSK-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 26: AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 27: PSK-AES256-GCM-SHA384</span></span>
<span class="line"><span>suite 28: PSK-CHACHA20-POLY1305</span></span>
<span class="line"><span>suite 29: RSA-PSK-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 30: DHE-PSK-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 31: AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 32: PSK-AES128-GCM-SHA256</span></span>
<span class="line"><span>suite 33: AES256-SHA256</span></span>
<span class="line"><span>suite 34: AES128-SHA256</span></span>
<span class="line"><span>suite 35: ECDHE-PSK-AES256-CBC-SHA384</span></span>
<span class="line"><span>suite 36: ECDHE-PSK-AES256-CBC-SHA</span></span>
<span class="line"><span>suite 37: SRP-RSA-AES-256-CBC-SHA</span></span>
<span class="line"><span>suite 38: SRP-AES-256-CBC-SHA</span></span>
<span class="line"><span>suite 39: RSA-PSK-AES256-CBC-SHA384</span></span>
<span class="line"><span>suite 40: DHE-PSK-AES256-CBC-SHA384</span></span>
<span class="line"><span>suite 41: RSA-PSK-AES256-CBC-SHA</span></span>
<span class="line"><span>suite 42: DHE-PSK-AES256-CBC-SHA</span></span>
<span class="line"><span>suite 43: AES256-SHA</span></span>
<span class="line"><span>suite 44: PSK-AES256-CBC-SHA384</span></span>
<span class="line"><span>suite 45: PSK-AES256-CBC-SHA</span></span>
<span class="line"><span>suite 46: ECDHE-PSK-AES128-CBC-SHA256</span></span>
<span class="line"><span>suite 47: ECDHE-PSK-AES128-CBC-SHA</span></span>
<span class="line"><span>suite 48: SRP-RSA-AES-128-CBC-SHA</span></span>
<span class="line"><span>suite 49: SRP-AES-128-CBC-SHA</span></span>
<span class="line"><span>suite 50: RSA-PSK-AES128-CBC-SHA256</span></span>
<span class="line"><span>suite 51: DHE-PSK-AES128-CBC-SHA256</span></span>
<span class="line"><span>suite 52: RSA-PSK-AES128-CBC-SHA</span></span>
<span class="line"><span>suite 53: DHE-PSK-AES128-CBC-SHA</span></span>
<span class="line"><span>suite 54: AES128-SHA</span></span>
<span class="line"><span>suite 55: PSK-AES128-CBC-SHA256</span></span>
<span class="line"><span>suite 56: PSK-AES128-CBC-SHA</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+g+`" alt="image-20210309160439908" tabindex="0" loading="lazy"><figcaption>image-20210309160439908</figcaption></figure><p>看看后端代码是如何实现这个的</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- Copyright (C) 2019 by chrono</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- ssl/tls cipher suites</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--local ssl = require &quot;ngx.ssl&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;bit&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> band</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.band</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ffi&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ffi_new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.new</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ffi_gc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.gc</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ffi_copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.copy</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ffi_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.string</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.C</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cdef</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[[</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">typedef</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ssl_method_st SSL_METHOD;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">typedef</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ssl_st SSL;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">typedef</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ssl_ctx_st SSL_CTX;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OpenSSL_version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SSL_METHOD </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TLS_method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SSL_CTX </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_CTX_new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SSL_METHOD </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">meth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SSL_CTX_free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">SSL_CTX </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SSL </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">SSL_CTX </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SSL_free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">SSL </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_get_cipher_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SSL </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">char</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_get_shared_ciphers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SSL </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">buf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.scheme</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ~= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;https&#39; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    --ngx.log(ngx.ERR, scheme)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redirect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;https://&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.host..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.request_uri, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">301</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- workaround on ubuntu 1604 OpenSSL 1.0.1f</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--if not pcall(ffi.typeof, &#39;OpenSSL_version&#39;) then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--    return ngx.say(&#39;read openssl error.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> openssl_ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffi_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OpenSSL_version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.INFO, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello openssl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;hello &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">openssl_ver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--ngx.say(&#39;\\nver: &#39;, ssl.get_tls1_version_str())</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 打印客户端请求传递的 ssl 相关信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">protocol: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_protocol)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sni name: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_server_name)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">client cert: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_client_verify)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">client curves: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_curves)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">client suites: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_ciphers)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">server suite: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.var.ssl_cipher)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ssl_ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_CTX_new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TLS_method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ssl_ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--local cipher_list = C.SSL_get_cipher_list(ssl, 0)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--ngx.say(&#39;list 0: &#39;, ffi_str(cipher_list))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--local buf = ffi_new(&#39;char[?]&#39;, 4096)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--C.SSL_get_shared_ciphers(ssl, buf, 4096)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--ngx.say(&#39;list: &#39;, ffi_str(buf))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 打印服务器中支持的所有套件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">all suites in server:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cipher_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_get_cipher_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cipher_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.null </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ngx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">say</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;suite &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ffi_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cipher_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SSL_CTX_free</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ssl_ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以看到，实验环境使用的 TLS 是 1.2，客户端和服务器都支持非常多的密码套件，而最后协商选定的是 <code>ECDHE-RSA-AES256-GCM-SHA384</code> 。</p><p>这么长的名字看着有点晕吧，不用怕，其实 TLS 的密码套件命名非常规范，格式很固定。基本的形式是</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>密钥交换算法 + 签名算法 + 对称加密算法 + 摘要算法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如刚才的密码套件 <code>ECDHE-RSA-AES256-GCM-SHA384</code> 的意思就是：</p><ul><li>握手时使用 ECDHE 算法进行密钥交换</li><li>用 RSA 签名和身份认证，</li><li>握手后的通信使用 AES 对称算法，密钥长度 256 位</li><li>分组模式是 GCM</li><li>摘要算法 SHA384 用于消息认证和产生随机数</li></ul><h2 id="openssl" tabindex="-1"><a class="header-anchor" href="#openssl"><span>OpenSSL</span></a></h2><p>说到 TLS，就不能不谈到 OpenSSL，它是一个著名的 <strong>开源密码学程序库和工具包</strong>，几乎支持所有公开的加密算法和协议，已经成为了事实上的标准，许多应用软件都会使用它作为底层库来实现 TLS 功能，包括常用的 Web 服务器 Apache、Nginx 等。</p><p>OpenSSL 是从另一个开源库 SSLeay 发展出来的，曾经考虑命名为 <code>OpenTLS</code>，但当时（1998 年）TLS 还未正式确立，而 SSL 早已广为人知，所以最终使用了 <code>OpenSSL</code> 的名字。</p><p>OpenSSL 目前有三个主要的分支，1.0.2 和 1.1.0 都将在今年（2019）年底不再维护，最新的长期支持版本是 1.1.1，我们的实验环境使用的 OpenSSL 是 <code>1.1.0j</code> 。</p><p>由于 OpenSSL 是开源的，所以它还有一些代码分支，比如 Google 的 BoringSSL、OpenBSD 的 LibreSSL，这些分支在 OpenSSL 的基础上删除了一些老旧代码，也增加了一些新特性，虽然背后有大金主，但离取代 OpenSSL 还差得很远。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><ol><li>因为 HTTP 是明文传输，所以不安全，容易被黑客窃听或窜改；</li><li>通信安全必须同时具备机密性、完整性，身份认证和不可否认这四个特性；</li><li>HTTPS 的语法、语义仍然是 HTTP，但把下层的协议由 TCP/IP 换成了 SSL/TLS；</li><li>SSL/TLS 是信息安全领域中的权威标准，采用多种先进的加密技术保证通信安全；</li><li>OpenSSL 是著名的开源密码学工具包，是 SSL/TLS 的具体实现。</li></ol><h2 id="课下作业" tabindex="-1"><a class="header-anchor" href="#课下作业"><span>课下作业</span></a></h2><ol><li><p>你能说出 HTTPS 与 HTTP 有哪些区别吗？</p><p>HTTPS 相对于 HTTP 具有机密性，完整性，身份认证和不可否认的特性</p><p>HTTPS 是HTTP over SSL/TLS，HTTP 是 HTTP over TCP/IP</p></li><li><p>你知道有哪些方法能够实现机密性、完整性等安全特性呢？</p><p>实现机密性可以采用加密手段，接口签名实现完整性，数字签名用于身份认证</p></li></ol><h2 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h2><ul><li>一个有趣的事实，当前所有 TLS 的 RFC 文档末尾数字都是 46（2246、4346、5246、8846）</li><li>除了 HTTP，SSL/TLS 也可以承载其他的应用协议，例如 <code>FTP=&gt;FTP</code>、<code>LDAP= LDAPS</code> 等</li><li>OpenSSL 前身 SSLeay 的名字来源于其作者之的 <code>EriC A. Young</code></li><li>关于 OpenSSL 有一个著名的「心脏出血( Heart Bleed)」漏洞,出现在 1.0.1 版里</li><li>OpenSSL 里的密码套件定义与 TLS 略有不同，TLS 里的形式是 <code>TLS_ECDHE_RSA_WITH_AES256_GCM_SHA384</code>，加了前缀 <code>TLS</code>，并用 <code>WTH</code> 分开了握手和通信的算法</li><li>另一个比较著名的开源密码库是 NSS（ Network Security Services），由 Mozilla 开发</li></ul>`,33))])}const C=t(y,[["render",S],["__file","01.html.vue"]]),E=JSON.parse('{"path":"/http-protocol/05/01.html","title":"01 | TLS 又是什么？","lang":"zh-CN","frontmatter":{"description":"01 | TLS 又是什么？ 在 曾经谈到过 HTTP 的一些缺点，其中的「无状态」在加入 Cookie 后得到了解决，而另两个缺点—— 明文 和 不安全 仅凭 HTTP 自身是无力解决的，需要引入新的 HTTPS 协议。 为什么要有 HTTPS？ 简单的回答是 因为 HTTP 不安全 。 由于 HTTP 天生明文 的特点，整个传输过程完全透明，任何人...","head":[["meta",{"property":"og:url","content":"https://www.pvzge.com/blog_technical/http-protocol/05/01.html"}],["meta",{"property":"og:title","content":"01 | TLS 又是什么？"}],["meta",{"property":"og:description","content":"01 | TLS 又是什么？ 在 曾经谈到过 HTTP 的一些缺点，其中的「无状态」在加入 Cookie 后得到了解决，而另两个缺点—— 明文 和 不安全 仅凭 HTTP 自身是无力解决的，需要引入新的 HTTPS 协议。 为什么要有 HTTPS？ 简单的回答是 因为 HTTP 不安全 。 由于 HTTP 天生明文 的特点，整个传输过程完全透明，任何人..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-21T11:38:46.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-21T11:38:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01 | TLS 又是什么？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-21T11:38:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LMYY\\",\\"url\\":\\"https://gaozih.com\\"}]}"]]},"headers":[{"level":2,"title":"为什么要有 HTTPS？","slug":"为什么要有-https","link":"#为什么要有-https","children":[]},{"level":2,"title":"什么是安全？","slug":"什么是安全","link":"#什么是安全","children":[]},{"level":2,"title":"什么是 HTTPS？","slug":"什么是-https","link":"#什么是-https","children":[]},{"level":2,"title":"SSL/TLS","slug":"ssl-tls","link":"#ssl-tls","children":[]},{"level":2,"title":"OpenSSL","slug":"openssl","link":"#openssl","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"课下作业","slug":"课下作业","link":"#课下作业","children":[]},{"level":2,"title":"拓展阅读","slug":"拓展阅读","link":"#拓展阅读","children":[]}],"git":{"createdTime":1734781126000,"updatedTime":1734781126000,"contributors":[{"name":"liao_rh","username":"liao_rh","email":"993929808@qq.com","commits":1,"url":"https://github.com/liao_rh"}]},"readingTime":{"minutes":13.18,"words":3955},"filePathRelative":"http-protocol/05/01.md","localizedDate":"2024年12月21日","autoDesc":true}');export{C as comp,E as data};
