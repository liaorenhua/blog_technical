import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,i as a,o as r}from"./app-BusfoemM.js";const p={};function i(c,t){return r(),o("div",null,t[0]||(t[0]=[a('<h1 id="_01-能解决什么问题" tabindex="-1"><a class="header-anchor" href="#_01-能解决什么问题"><span>01 | 能解决什么问题？</span></a></h1><blockquote><p>最近几年，国内软件业的飞速发展，业务越来越复杂、周期越来越长、推倒重来的风险越来越大。各家企业也纷纷落地微服务来保持系统的高效稳定，DDD 也就开始重新 回到开发者的视野，并大有遍地开花的趋势。</p></blockquote><p>1、解决软件规模问题</p><p>为什么软件会退化，随着变更而设计质量下降呢？ 软件本质是对真实世界的模拟(从而为其他行业赋能)，软件中业务逻辑正确与否的唯一标准就是与真实世界是否一致。软件要做啥样，不由我们来决定，也不由用户来决定， 而是由客观世界决定。软件业务逻辑越来越接近真实世界，使得我们软件越来越专业，同时业务逻辑越来越复杂，软件规模越来越大。</p><p>软件退化的根源？ 软件设计质量最高时候第一次设计那个版本；当第一个设计上线以后就开始各种需求变更，就常常会打乱原有设计。软件退化的根源不是软件变更，软件变更仅仅是诱因。 每次软件修改都能解耦保持软件功能扩展；要保持软件设计质量不退化，必须在每次需求变更对原有程序结构进行适当调整（如果每次加功能都在源代码修改是不是造成膨胀，违反开闭原则）</p><p>如何杜绝软件退化方法？ 两顶帽子！<br> “两顶帽子”通常指的是：<br> 重构的帽子：当戴上这顶帽子时，开发者的重点是优化现有代码结构，而不添加新功能或改变现有功能的行为。这意味着可以改进代码的设计、提高性能、清理技术债务等， 但所有这些工作都应在不改变软件外部行为的前提下进行。为了确保这一点，在进行重构之前应该有充分的测试覆盖，以保证重构不会引入新的错误。<br> 新增功能的帽子：当戴上这顶帽子时，开发者的任务是实现新的功能需求。此时的重点在于满足业务需求，添加新特性或修改现有特性以适应变化的需求。在这个过程中， 如果发现了现有代码的问题，不应该直接修复这些问题，而是要换上“重构的帽子”来处理这些问题。 这种方法鼓励开发人员将注意力集中在单一任务上，避免同时处理多个问题（如同时尝试增加新功能并改进现有代码），从而减少混乱，并有助于保持代码库的整洁与有序。 此外，这种方法也有助于团队成员之间的沟通，因为它提供了一种清晰的方式来讨论和分配工作。</p><p>在每次变更时候，先回到领域模型，基于业务进行领域模型变更。</p><p>在DDD的具体应用中，两顶帽子的概念可以帮助团队专注于构建和维护高质量的领域模型，确保每一次变更都能正确地反映业务规则的变化，而不破坏系统的稳定性和一致性。</p><p>为当前的需求进行设计，使其刚刚满足当前需求，满足软件质量和代码最少。（灵活设计不见得有预见性，可能设计成为摆设）</p>',9)]))}const m=e(p,[["render",i],["__file","01.html.vue"]]),d=JSON.parse('{"path":"/ddd/articles/01.html","title":"DDD","lang":"zh-CN","frontmatter":{"title":"DDD","author":"leo","icon":"note","date":"2025-01-05T00:00:00.000Z","category":"架构","tag":["DDD"],"description":"01 | 能解决什么问题？ 最近几年，国内软件业的飞速发展，业务越来越复杂、周期越来越长、推倒重来的风险越来越大。各家企业也纷纷落地微服务来保持系统的高效稳定，DDD 也就开始重新 回到开发者的视野，并大有遍地开花的趋势。 1、解决软件规模问题 为什么软件会退化，随着变更而设计质量下降呢？ 软件本质是对真实世界的模拟(从而为其他行业赋能)，软件中业务逻...","head":[["meta",{"property":"og:url","content":"https://www.pvzge.com/blog_technical/ddd/articles/01.html"}],["meta",{"property":"og:title","content":"DDD"}],["meta",{"property":"og:description","content":"01 | 能解决什么问题？ 最近几年，国内软件业的飞速发展，业务越来越复杂、周期越来越长、推倒重来的风险越来越大。各家企业也纷纷落地微服务来保持系统的高效稳定，DDD 也就开始重新 回到开发者的视野，并大有遍地开花的趋势。 1、解决软件规模问题 为什么软件会退化，随着变更而设计质量下降呢？ 软件本质是对真实世界的模拟(从而为其他行业赋能)，软件中业务逻..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-05T12:36:25.000Z"}],["meta",{"property":"article:author","content":"leo"}],["meta",{"property":"article:tag","content":"DDD"}],["meta",{"property":"article:published_time","content":"2025-01-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-05T12:36:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDD\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-05T12:36:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"leo\\"}]}"]]},"headers":[],"git":{"createdTime":1736080585000,"updatedTime":1736080585000,"contributors":[{"name":"liao_rh","username":"liao_rh","email":"993929808@qq.com","commits":1,"url":"https://github.com/liao_rh"}]},"readingTime":{"minutes":3.13,"words":938},"filePathRelative":"ddd/articles/01.md","localizedDate":"2025年1月5日","autoDesc":true}');export{m as comp,d as data};
